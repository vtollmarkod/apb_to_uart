1. git status
2. git add .
3. git commit -m "Your message about the commit"
4. git push origin master
5. vtollmarkod praksa2019
6. git pull origin master
https://product.hubspot.com/blog/git-and-github-tutorial-for-beginners 

(git config --global user.name "markod"   git config --global user.email markod@thevtool.com)



https://product.hubspot.com/blog/git-and-github-tutorial-for-beginners
https://www.design-reuse.com/articles/10907/using-systemverilog-assertions-in-rtl-code.html
https://www.doulos.com/knowhow/sysverilog/tutorial/assertions/




PROCITATI :

verilab.com/files/use_the_sequence_luke_1.pdf
https://www.youtube.com/watch?v=S2JTr4uQwks

Dobar clanak o konfiguracionim objektima
http://www.learnuvmverification.com/index.php/2015/07/22/uvm-configuration-object-concept/
http://www.learnuvmverification.com/index.php/2015/07/13/application-of-virtual-interface-and-uvm_config_db/

Sekvencu sekvenci mora da prvo randomizujem iz testa, pa onda pokrecem na zadatom sekvenceru

ALWAYS Block
= is blocking statement. In an always block, the line of code will be executed only after it's previous line has executed. Hence, they happens one after the other, just like combinatoral logics in loop.

<= is non-blocking in nature. This means that in an always block, every line will be executed in parallel. Hence leading to implementation of sequential elements.



